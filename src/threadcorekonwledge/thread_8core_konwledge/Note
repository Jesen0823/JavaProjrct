一，实现多线程有多少种方法
1.实现Runnable接口
2.继承Thread类
解耦的角度看方法1更好；Thread更繁琐资源浪费，可扩展性差，子类继承父类重写run()
二，启动线程的正确方法
start()方法告诉jvm虚拟器有新线程需要启动，jvm会在线程调度器空闲的时候启动线程
start一个新线程的准备工作：检查线程状态，加入线程组，调度Native层的start0方法

三，停止线程的正确方法
线程在申明情况下会停止：1是任务完成自动停止2的异常发生，停止后线程占用资源会被jvm回收
1.错误的方法：
1）被启用的stop()/suspend()/resume()方法

2）volatile设置boolean标记位

2.正确的方法：
interrupt()来通知该线程中断，而不是强制停止


3.停止线程相关的方法
1)能响应中断的方法有哪些？即能感知到interrupt信号
Object.wait()/wait(long)/wait(long,int)
Thread.sleep(long)/sleep(long,int)
Thread.join()/join(long)/join(long,int)
java.util.concurrent.BlockingQueue.take()/put()
java.util.concurrent.locks.Lock.lockInterruptibly()
java.util.concurrent.CountDownLatch.await()
java.util.concurrent.CyclicBarrier.await()
java.util.concurrent.Exchanger.exchange(V)
java.nio.channels.InterruptibleChannel相关
java.nio.channels.Selector相关方法
四，线程的6个状态

五，Thread,Object中与线程相关的方法

六，线程未捕获异常UncaughtException如何处理

七，多线程的性能问题

八，面试题


高质量固定途径汇总网站：ohmyrss.com
订阅网站：InfoQ